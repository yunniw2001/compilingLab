@a = dso_local global [12 x i32] zeroinitializer
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
define dso_local i32 @main(){
%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
store i32 0, i32* %4
store i32 0, i32* %3
br label %5
5:
%6 = load i32, i32* %4
%7 = add i32 3, 4
%8 = sub i32 %7, 2
%9 = icmp sle i32 %6, %8
br i1 %9,label %10, label %48
10:
%11 = load i32, i32* %4
store i32 %11, i32* %2
br label %12
12:
%13 = load i32, i32* %2
%14 = icmp sge i32 %13, 0
br i1 %14,label %15, label %45
15:
%16 = load i32, i32* %2
%17 = load i32, i32* %4
%18 = load i32, i32* %2
%19 = icmp slt i32 %16, 4
%20 = sub i32 %17, %18
%21 = icmp slt i32 %20, 3
%22 = and i1 %19,%21
br i1 %22,label %23, label %42
23:
%24 = load i32, i32* %4
%25 = load i32, i32* %2
%26 = sub i32 %24, %25
%27 = load i32, i32* %2
%28 = load i32, i32* %3
%29 = mul i32 %26, 4
%30 = add i32 %29, %27
%31 = getelementptr [12 x i32], [12 x i32]* @a, i32 0, i32 %30
store i32 %28, i32* %31
%32 = load i32, i32* %3
%33 = add i32 %32, 1
store i32 %33, i32* %3
%34 = load i32, i32* %4
%35 = load i32, i32* %2
%36 = sub i32 %34, %35
%37 = load i32, i32* %2
%38 = mul i32 %36, 4
%39 = add i32 %38, %37
%40 = getelementptr [12 x i32], [12 x i32]* @a, i32 0, i32 %39
%41 = load i32, i32* %40
call void @putint(i32 %41)
call void @putch(i32 10)
call void @putch(i32 10)
br label %42
42:
%43 = load i32, i32* %2
%44 = sub i32 %43, 1
store i32 %44, i32* %2
br label %12
45:
%46 = load i32, i32* %4
%47 = add i32 %46, 1
store i32 %47, i32* %4
br label %5
48:
store i32 0, i32* %4
store i32 0, i32* %1
br label %49
49:
%50 = load i32, i32* %4
%51 = icmp slt i32 %50, 3
br i1 %51,label %52, label %68
52:
store i32 0, i32* %1
br label %53
53:
%54 = load i32, i32* %1
%55 = icmp slt i32 %54, 4
br i1 %55,label %56, label %65
56:
%57 = load i32, i32* %4
%58 = load i32, i32* %1
%59 = mul i32 %57, 4
%60 = add i32 %59, %58
%61 = getelementptr [12 x i32], [12 x i32]* @a, i32 0, i32 %60
%62 = load i32, i32* %61
call void @putint(i32 %62)
call void @putch(i32 32)
%63 = load i32, i32* %1
%64 = add i32 %63, 1
store i32 %64, i32* %1
br label %53
65:
call void @putch(i32 10)
%66 = load i32, i32* %4
%67 = add i32 %66, 1
store i32 %67, i32* %4
br label %49
68:
ret i32 0
}