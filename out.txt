@field = dso_local global [2 x i32] zeroinitializer
declare i32 @getint()
declare void @putint(i32)
declare void @memset(i32*, i32, i32)
define dso_local i32 @main(){
%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
%5 = alloca [1 x i32]
%6 = alloca [3 x i32]
%7 = getelementptr [1 x i32], [1 x i32]* %5, i32 0, i32 0
call void @memset(i32* %7, i32 0, i32 4)
%8 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 0
call void @memset(i32* %8, i32 0, i32 12)
%9 = call i32 @getint()
%10 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 0
store i32 %9, i32* %10
%11 = call i32 @getint()
%12 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 1
store i32 %11, i32* %12
%13 = add i32 0, 0
%14 = sub i32 0, 1
%15 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 %13
store i32 %14, i32* %15
%16 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 0
%17 = load i32, i32* %16
%18 = sub i32 %17, 2
%19 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 0
store i32 %18, i32* %19
%20 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 1
%21 = load i32, i32* %20
store i32 %21, i32* %4
%22 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 2
store i32 16, i32* %22
%23 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 0
%24 = load i32, i32* %23
%25 = sub i32 3, %24
%26 = getelementptr [3 x i32], [3 x i32]* %6, i32 0, i32 %25
%27 = load i32, i32* %26
%28 = load i32, i32* %4
%29 = add i32 %27, 2
%30 = add i32 %29, %28
call void @putint(i32 %30)
ret i32 0
}