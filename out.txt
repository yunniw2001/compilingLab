declare void @memset(i32*, i32, i32)
@array = dso_local global [110 x i32] zeroinitializer
@n = dso_local global i32 0
define dso_local void @init(i32 %0){
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
store i32  %0, i32* %5
store i32 1, i32* %3
ret void
}
define dso_local i32 @findfa(i32 %0){
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
store i32  %0, i32* %4
ret i32 0
}
define dso_local void @mmerge(i32 %0, i32 %1){
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
store i32  %0, i32* %6
%7 = alloca i32
store i32  %1, i32* %7
ret void
}
define dso_local i32 @main(){
%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca i32
%8 = alloca i32
%9 = alloca i32
store i32 1, i32* %9
br label %10
10:
%11 = load i32, i32* %9
%12 = icmp ne i32 %11, 0
br i1 %12,label %13, label %37
13:
store i32 0, i32* %5
store i32 0, i32* %4
%14 = load i32, i32* @n
%15 = load i32, i32* @n
%16 = mul i32 %14, %15
%17 = add i32 %16, 1
store i32 %17, i32* %3
br label %18
18:
%19 = load i32, i32* %5
%20 = load i32, i32* %8
%21 = icmp slt i32 %19, %20
br i1 %21,label %22, label %36
22:
%23 = load i32, i32* %4
%24 = icmp ne i32 %23, 0
%25 = xor i1 %24, true
br i1 %25,label %26, label %33
26:
%27 = load i32, i32* @n
%28 = load i32, i32* %7
%29 = load i32, i32* %6
%30 = sub i32 %28, 1
%31 = mul i32 %27, %30
%32 = add i32 %31, %29
store i32 %32, i32* %2
br label %33
33:
%34 = load i32, i32* %5
%35 = add i32 %34, 1
store i32 %35, i32* %5
br label %18
36:
br label %10
37:
ret i32 0
}
