@a = dso_local global [12 x i32] zeroinitializer
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
define dso_local i32 @main(){
%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
store i32 0, i32* %4
store i32 0, i32* %3
br label %5
5:
%6 = load i32, i32* %4
%7 = add i32 3, 4
%8 = sub i32 %7, 2
%9 = icmp sle i32 %6, %8
br i1 %9,label %10, label %32
10:
%11 = load i32, i32* %4
store i32 %11, i32* %2
br label %12
12:
%13 = load i32, i32* %2
%14 = icmp sge i32 %13, 0
br i1 %14,label %15, label %29
15:
%16 = load i32, i32* %2
%17 = load i32, i32* %4
%18 = load i32, i32* %2
%19 = icmp slt i32 %16, 4
%20 = sub i32 %17, %18
%21 = icmp slt i32 %20, 3
%22 = and i1 %19,%21
br i1 %22,label %23, label %26
23:
%24 = load i32, i32* %3
%25 = add i32 %24, 1
store i32 %25, i32* %3
br label %26
26:
%27 = load i32, i32* %2
%28 = sub i32 %27, 1
store i32 %28, i32* %2
br label %12
29:
%30 = load i32, i32* %4
%31 = add i32 %30, 1
store i32 %31, i32* %4
br label %5
32:
store i32 0, i32* %4
store i32 0, i32* %1
br label %33
33:
%34 = load i32, i32* %4
%35 = icmp slt i32 %34, 3
br i1 %35,label %36, label %50
36:
store i32 0, i32* %1
br label %37
37:
%38 = load i32, i32* %1
%39 = icmp slt i32 %38, 4
br i1 %39,label %40, label %47
40:
%41 = load i32, i32* %4
%42 = load i32, i32* %1
%43 = getelementptr [12 x i32], [12 x i32]* @a, i32 0, i32 0
%44 = load i32, i32* %43
call void @putint(i32 %44)
call void @putch(i32 32)
%45 = load i32, i32* %1
%46 = add i32 %45, 1
store i32 %46, i32* %1
br label %37
47:
call void @putch(i32 10)
%48 = load i32, i32* %4
%49 = add i32 %48, 1
store i32 %49, i32* %4
br label %33
50:
ret i32 0
}