declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
@array = dso_local global [110 x i32] zeroinitializer
@n = dso_local global i32 0
define dso_local void @init(i32 %0){
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
store i32  %0, i32* %5
store i32 1, i32* %3
br label %6
6:
%7 = load i32, i32* %3
%8 = load i32, i32* %5
%9 = load i32, i32* %5
%10 = mul i32 %8, %9
%11 = add i32 %10, 1
%12 = icmp sle i32 %7, %11
br i1 %12,label %13, label %19
13:
%14 = load i32, i32* %3
%15 = sub i32 0, 1
%16 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %14
store i32 %15, i32* %16
%17 = load i32, i32* %3
%18 = add i32 %17, 1
store i32 %18, i32* %3
br label %6
19:
ret void
}
define dso_local i32 @findfa(i32 %0){
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
store i32  %0, i32* %4
%5 = load i32, i32* %4
%6 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %5
%7 = load i32, i32* %6
%8 = load i32, i32* %4
%9 = icmp eq i32 %7, %8
br i1 %9,label %10, label %12
10:
%11 = load i32, i32* %4
ret i32 %11
12:
%13 = load i32, i32* %4
%14 = load i32, i32* %4
%15 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %14
%16 = load i32, i32* %15
%17 = call i32 @findfa(i32 %16)
%18 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %13
store i32 %17, i32* %18
%19 = load i32, i32* %4
%20 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %19
%21 = load i32, i32* %20
ret i32 %21
}
define dso_local void @mmerge(i32 %0, i32 %1){
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca i32
%8 = alloca i32
store i32  %0, i32* %8
%9 = alloca i32
store i32  %1, i32* %9
%10 = load i32, i32* %8
%11 = call i32 @findfa(i32 %10)
store i32 %11, i32* %5
%12 = load i32, i32* %9
%13 = call i32 @findfa(i32 %12)
store i32 %13, i32* %4
%14 = load i32, i32* %5
%15 = load i32, i32* %4
%16 = icmp ne i32 %14, %15
br i1 %16,label %17, label %21
17:
%18 = load i32, i32* %5
%19 = load i32, i32* %4
%20 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %18
store i32 %19, i32* %20
br label %21
21:
ret void
}
define dso_local i32 @main(){
%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca i32
%8 = alloca i32
%9 = alloca i32
%10 = alloca i32
store i32 1, i32* %10
br label %11
11:
%12 = load i32, i32* %10
%13 = icmp ne i32 %12, 0
br i1 %13,label %14, label %156
14:
%15 = load i32, i32* %10
%16 = sub i32 %15, 1
store i32 %16, i32* %10
store i32 4, i32* @n
store i32 10, i32* %9
store i32 0, i32* %6
store i32 0, i32* %5
%17 = load i32, i32* @n
call void @init(i32 %17)
%18 = load i32, i32* @n
%19 = load i32, i32* @n
%20 = mul i32 %18, %19
%21 = add i32 %20, 1
store i32 %21, i32* %4
br label %22
22:
%23 = load i32, i32* %6
%24 = load i32, i32* %9
%25 = icmp slt i32 %23, %24
br i1 %25,label %26, label %149
26:
%27 = call i32 @getint()
store i32 %27, i32* %8
%28 = call i32 @getint()
store i32 %28, i32* %7
%29 = load i32, i32* %5
%30 = icmp ne i32 %29, 0
%31 = xor i1 %30, true
br i1 %31,label %32, label %146
32:
%33 = load i32, i32* @n
%34 = load i32, i32* %8
%35 = load i32, i32* %7
%36 = sub i32 %34, 1
%37 = mul i32 %33, %36
%38 = add i32 %37, %35
store i32 %38, i32* %3
%39 = load i32, i32* %3
%40 = load i32, i32* %3
%41 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %39
store i32 %40, i32* %41
%42 = load i32, i32* %8
%43 = icmp eq i32 %42, 1
br i1 %43,label %44, label %47
44:
%45 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
store i32 0, i32* %45
%46 = load i32, i32* %3
call void @mmerge(i32 %46, i32 0)
br label %47
47:
%48 = load i32, i32* %8
%49 = load i32, i32* @n
%50 = icmp eq i32 %48, %49
br i1 %50,label %51, label %57
51:
%52 = load i32, i32* %4
%53 = load i32, i32* %4
%54 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %52
store i32 %53, i32* %54
%55 = load i32, i32* %3
%56 = load i32, i32* %4
call void @mmerge(i32 %55, i32 %56)
br label %57
57:
%58 = load i32, i32* %7
%59 = load i32, i32* @n
%60 = icmp slt i32 %58, %59
br i1 %60,label %61, label %73
61:
%62 = load i32, i32* %3
%63 = add i32 %62, 1
%64 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %63
%65 = load i32, i32* %64
%66 = sub i32 0, 1
%67 = icmp ne i32 %65, %66
br i1 %67,label %68, label %72
68:
%69 = load i32, i32* %3
%70 = load i32, i32* %3
%71 = add i32 %70, 1
call void @mmerge(i32 %69, i32 %71)
br label %72
72:
br label %73
73:
%74 = load i32, i32* %7
%75 = icmp sgt i32 %74, 1
br i1 %75,label %76, label %88
76:
%77 = load i32, i32* %3
%78 = sub i32 %77, 1
%79 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %78
%80 = load i32, i32* %79
%81 = sub i32 0, 1
%82 = icmp ne i32 %80, %81
br i1 %82,label %83, label %87
83:
%84 = load i32, i32* %3
%85 = load i32, i32* %3
%86 = sub i32 %85, 1
call void @mmerge(i32 %84, i32 %86)
br label %87
87:
br label %88
88:
%89 = load i32, i32* %8
%90 = load i32, i32* @n
%91 = icmp slt i32 %89, %90
br i1 %91,label %92, label %106
92:
%93 = load i32, i32* %3
%94 = load i32, i32* @n
%95 = add i32 %93, %94
%96 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %95
%97 = load i32, i32* %96
%98 = sub i32 0, 1
%99 = icmp ne i32 %97, %98
br i1 %99,label %100, label %105
100:
%101 = load i32, i32* %3
%102 = load i32, i32* %3
%103 = load i32, i32* @n
%104 = add i32 %102, %103
call void @mmerge(i32 %101, i32 %104)
br label %105
105:
br label %106
106:
%107 = load i32, i32* %8
%108 = icmp sgt i32 %107, 1
br i1 %108,label %109, label %123
109:
%110 = load i32, i32* %3
%111 = load i32, i32* @n
%112 = sub i32 %110, %111
%113 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %112
%114 = load i32, i32* %113
%115 = sub i32 0, 1
%116 = icmp ne i32 %114, %115
br i1 %116,label %117, label %122
117:
%118 = load i32, i32* %3
%119 = load i32, i32* %3
%120 = load i32, i32* @n
%121 = sub i32 %119, %120
call void @mmerge(i32 %118, i32 %121)
br label %122
122:
br label %123
123:
%124 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
%125 = load i32, i32* %124
%126 = sub i32 0, 1
%127 = icmp ne i32 %125, %126
br i1 %127,label %128, label %145
128:
%129 = load i32, i32* %4
%130 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %129
%131 = load i32, i32* %130
%132 = sub i32 0, 1
%133 = icmp ne i32 %131, %132
br i1 %133,label %134, label %144
134:
%135 = call i32 @findfa(i32 0)
%136 = load i32, i32* %4
%137 = call i32 @findfa(i32 %136)
%138 = icmp eq i32 %135, %137
br i1 %138,label %139, label %143
139:
store i32 1, i32* %5
%140 = load i32, i32* %6
%141 = add i32 %140, 1
store i32 %141, i32* %2
%142 = load i32, i32* %2
call void @putint(i32 %142)
call void @putch(i32 10)
br label %143
143:
br label %144
144:
br label %145
145:
br label %146
146:
%147 = load i32, i32* %6
%148 = add i32 %147, 1
store i32 %148, i32* %6
br label %22
149:
%150 = load i32, i32* %5
%151 = icmp ne i32 %150, 0
%152 = xor i1 %151, true
br i1 %152,label %153, label %155
153:
%154 = sub i32 0, 1
call void @putint(i32 %154)
call void @putch(i32 10)
br label %155
155:
br label %11
156:
ret i32 0
}
