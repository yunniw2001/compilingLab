declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
declare void @memset(i32*, i32, i32)
@n = dso_local global i32 0
define dso_local i32 @swap(i32* %0, i32 %1, i32 %2){
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca i32
%8 = alloca i32
%9 = alloca i32*
store i32*  %0, i32* * %9
%10 = load i32*, i32* * %9
%11 = alloca i32
store i32  %1, i32* %11
%12 = alloca i32
store i32  %2, i32* %12
%13 = load i32, i32* %11
%14 = getelementptr i32, i32* %0,i32 %13
%15 = load i32, i32* %14
store i32 %15, i32* %5
%16 = load i32, i32* %11
%17 = load i32, i32* %12
%18 = getelementptr i32, i32* %0,i32 %17
%19 = load i32, i32* %18
%20 = getelementptr i32, i32* %0,i32 %16
store i32 %19, i32* %20
%21 = load i32, i32* %12
%22 = load i32, i32* %5
%23 = getelementptr i32, i32* %0,i32 %21
store i32 %22, i32* %23
ret i32 0
}
define dso_local i32 @heap_ajust(i32* %0, i32 %1, i32 %2){
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca i32
%8 = alloca i32
%9 = alloca i32
%10 = alloca i32
%11 = alloca i32*
store i32*  %0, i32* * %11
%12 = load i32*, i32* * %11
%13 = alloca i32
store i32  %1, i32* %13
%14 = alloca i32
store i32  %2, i32* %14
%15 = load i32, i32* %13
store i32 %15, i32* %7
%16 = load i32, i32* %7
%17 = mul i32 %16, 2
%18 = add i32 %17, 1
store i32 %18, i32* %6
br label %19
19:
%20 = load i32, i32* %6
%21 = load i32, i32* %14
%22 = add i32 %21, 1
%23 = icmp slt i32 %20, %22
br i1 %23,label %24, label %59
24:
%25 = load i32, i32* %6
%26 = load i32, i32* %14
%27 = load i32, i32* %6
%28 = getelementptr i32, i32* %0,i32 %27
%29 = load i32, i32* %28
%30 = load i32, i32* %6
%31 = add i32 %30, 1
%32 = getelementptr i32, i32* %0,i32 %31
%33 = load i32, i32* %32
%34 = icmp slt i32 %25, %26
%35 = icmp slt i32 %29, %33
%36 = and i1 %34,%35
br i1 %36,label %37, label %40
37:
%38 = load i32, i32* %6
%39 = add i32 %38, 1
store i32 %39, i32* %6
br label %40
40:
%41 = load i32, i32* %7
%42 = getelementptr i32, i32* %0,i32 %41
%43 = load i32, i32* %42
%44 = load i32, i32* %6
%45 = getelementptr i32, i32* %0,i32 %44
%46 = load i32, i32* %45
%47 = icmp sgt i32 %43, %46
br i1 %47,label %48, label %49
48:
ret i32 0
49:
%50 = getelementptr i32, i32* %0,i32 0
%51 = load i32, i32* %7
%52 = load i32, i32* %6
%53 = call i32 @swap(i32* %50, i32 %51, i32 %52)
store i32 %53, i32* %7
%54 = load i32, i32* %6
store i32 %54, i32* %7
%55 = load i32, i32* %7
%56 = mul i32 %55, 2
%57 = add i32 %56, 1
store i32 %57, i32* %6
br label %58
58:
br label %19
59:
ret i32 0
}
define dso_local i32 @heap_sort(i32* %0, i32 %1){
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca i32
%8 = alloca i32
%9 = alloca i32
%10 = alloca i32
%11 = alloca i32*
store i32*  %0, i32* * %11
%12 = load i32*, i32* * %11
%13 = alloca i32
store i32  %1, i32* %13
%14 = load i32, i32* %13
%15 = sdiv i32 %14, 2
%16 = sub i32 %15, 1
store i32 %16, i32* %8
br label %17
17:
%18 = load i32, i32* %8
%19 = sub i32 0, 1
%20 = icmp sgt i32 %18, %19
br i1 %20,label %21, label %30
21:
%22 = load i32, i32* %13
%23 = sub i32 %22, 1
store i32 %23, i32* %7
%24 = getelementptr i32, i32* %0,i32 0
%25 = load i32, i32* %8
%26 = load i32, i32* %7
%27 = call i32 @heap_ajust(i32* %24, i32 %25, i32 %26)
store i32 %27, i32* %7
%28 = load i32, i32* %8
%29 = sub i32 %28, 1
store i32 %29, i32* %8
br label %17
30:
%31 = load i32, i32* %13
%32 = sub i32 %31, 1
store i32 %32, i32* %8
br label %33
33:
%34 = load i32, i32* %8
%35 = icmp sgt i32 %34, 0
br i1 %35,label %36, label %49
36:
store i32 0, i32* %6
%37 = getelementptr i32, i32* %0,i32 0
%38 = load i32, i32* %6
%39 = load i32, i32* %8
%40 = call i32 @swap(i32* %37, i32 %38, i32 %39)
store i32 %40, i32* %7
%41 = load i32, i32* %8
%42 = sub i32 %41, 1
store i32 %42, i32* %7
%43 = getelementptr i32, i32* %0,i32 0
%44 = load i32, i32* %6
%45 = load i32, i32* %7
%46 = call i32 @heap_ajust(i32* %43, i32 %44, i32 %45)
store i32 %46, i32* %7
%47 = load i32, i32* %8
%48 = sub i32 %47, 1
store i32 %48, i32* %8
br label %33
49:
ret i32 0
}
define dso_local i32 @main(){
%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
%6 = alloca i32
%7 = alloca [10 x i32]
%8 = getelementptr [10 x i32], [10 x i32]* %7, i32 0, i32 0
call void @memset(i32* %8, i32 0, i32 40)
%9 = getelementptr [10 x i32], [10 x i32]* %7, i32 0, i32 0
%10 = call i32 @getarray(i32* %9)
store i32 %10, i32* @n
store i32 0, i32* %6
%11 = getelementptr [10 x i32], [10 x i32]* %7, i32 0, i32 0
%12 = load i32, i32* @n
%13 = call i32 @heap_sort(i32* %11, i32 %12)
store i32 %13, i32* %6
%14 = load i32, i32* @n
%15 = getelementptr [10 x i32], [10 x i32]* %7, i32 0, i32 0
call void @putarray(i32 %14, i32* %15)
ret i32 0
}
